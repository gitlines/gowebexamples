<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Testtag on Go Web Examples</title>
    <link>https://gowebexamples.com/tags/testtag/</link>
    <description>Recent content in Testtag on Go Web Examples</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://gowebexamples.com/tags/testtag/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>First Own</title>
      <link>https://gowebexamples.com/first-own/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gowebexamples.com/first-own/</guid>
      <description>First Own Introduction Go is a battery included programming language and has a webserver already built in. The net/http package from the standard library contains all functionalities about the HTTP protocol. This includes (among many other things) an HTTP client and an HTTP server. In this example you will figure out how simple it is, to create a webserver that you can view in your browser.
   (adsbygoogle = window.</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://gowebexamples.com/hello-world/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://gowebexamples.com/hello-world/</guid>
      <description>Hello World Introduction Go is a battery included programming language and has a webserver already built in. The net/http package from the standard library contains all functionalities about the HTTP protocol. This includes (among many other things) an HTTP client and an HTTP server. In this example you will figure out how simple it is, to create a webserver that you can view in your browser.
   (adsbygoogle = window.</description>
    </item>
    
  </channel>
</rss>